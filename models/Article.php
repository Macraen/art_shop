<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "article".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $description
 * @property string|null $content
 * @property int|null $price
 * @property string|null $date
 * @property string|null $image
 * @property int|null $viewed
 * @property int|null $user_id
 * @property int|null $status
 * @property int|null $category_id
 *
 * @property ArticleTag[] $articleTags
 * @property Comment[] $comments
 */
class Article extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
{
    return 'article';
}

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
//            [['description', 'content'], 'string'],
//            [['price', 'viewed', 'user_id', 'status', 'category_id'], 'integer'],
//            [['date'], 'safe'],
//            [['title', 'image'], 'string', 'max' => 255],


        [['title'], 'required'],
            [['title', 'description', 'content', 'image'], 'string'],
            [['price'], 'integer'],
            //[['date'], 'date', 'format'=>'php:d-m-Y'],
            [['date'], 'default', 'value'=>date('d-m-Y')],
            [['status'], 'default', 'value'=>1],
            [['title'], 'string', 'max'=>255]
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'content' => 'Content',
            'price' => 'Price',
            'date' => 'Date',
            'image' => 'Image',
            'viewed' => 'Viewed',
            'user_id' => 'User ID',
            'status' => 'Status',
            'category_id' => 'Category ID',
        ];
    }

    /**
     * Gets query for [[ArticleTags]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getArticleTags()
    {
        return $this->hasMany(ArticleTag::className(), ['article_id' => 'id']);
    }

    /**
     * Gets query for [[Comments]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(Comment::className(), ['article_id' => 'id']);
    }

    public  function saveImage($filename){
        $this->image= $filename;
        return $this->save(false);
    }

    public function getImage(){
        return ($this->image)?'/webroot/uploads/'.$this->image : '/webroot/uploads/no-image.png';
    }

    public function deleteImage(){
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }
    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getCategory(){
        return $this->hasOne(Category::className(), ['id'=> 'category_id']);
    }

    public function saveCategory($category_id){
        $category = Category::findOne($category_id);
        if($category != null){
            $this->link('category', $category );
            return true;
        }


    }


    public  function saveArticle(){
        $this->user_id = Yii::$app->user->id;
        return $this->save();
    }

    public function getDate(){
        Yii::$app->formatter->locale = 'ru-RU';
       return Yii::$app->formatter->asDate($this->date);
    }

    public function getComment(){
        return $this->hasMany(Comment::className(),['article_id'=>'id']);
    }

    public function getAuthor()
    {
        return $this->hasOne(User::className(), ['id'=>'user_id']);
    }

    public function viewedCounter()
    {
        $this->viewed += 1;
        return $this->save(false);
    }


}
